
@import './_mixins.scss';
@import './_reset.scss';

.header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    h1 {
        margin: 0;
    }
    button.setLocalStorage{
        flex: none;
        padding: 5px 10px;
        @include button-default;        
        @include button-state;
    }
}

.habits {
    margin-top: 1rem;
    &-enters{
        overflow: hidden;
        display: flex;
        border-radius: 5px;
        border: 1px solid rgba(0, 0, 0, 0.1);
        &:hover,
        &:focus{
            border-color: rgba(0, 128, 0, 0.5);
        }
        &:focus:hover{
            border-color: rgba(0, 128, 0, 0.7);
        }
        .__inputEnter{
            -webkit-appearance: none;
            flex: auto;
            height: 48px;
            box-sizing: border-box;
            padding: 0 10px;
            outline: none;
            border: none;
            font-size: 1.2rem;
        }
        button[type="reset"]{
            @mixin getBGcolor($val){
                background-color: rgba(0, 0, 0, $val);
            }
            
            align-self: center;

            width: 25px;
            height: 25px;
            outline: none;
            border-radius: 50%;
            border: none;
            cursor: pointer;
            @include getBGcolor(0.05);
            
            display: flex;
            align-items: center;
            justify-content: center;

            &:hover,
            &:focus {
                @include getBGcolor(0.1);
            }
            &:focus:hover {
                @include getBGcolor(0.15);
            }

        }
        .__inputEnter:invalid + button[type="reset"] {
            display: none;
        }
        .__clearIcon {
            display: flex;
            justify-content: center;
            width: 25px;
            height: 10px;
            opacity: 0.3;
            &:hover {
                // opacity: 1;
            }
            &:before, &:after {
                position: absolute;
                content: ' ';
                height: 10px;
                width: 2px;
                background-color: #333;
            }
            &:before {
                transform: rotate(45deg);
            }
            &:after {
                transform: rotate(-45deg);
            }
        }
        
        .__buttonEnter{
            box-sizing: border-box;
            width: 48px;
            margin: 0 0 0 5px;
            padding: 0;
            font-size: 1rem;
            outline: none;
            border: none;
            background-color: transparent;
            cursor: pointer;
            @include button-state;
        }
    }
    &-actions {
        margin-top: 1.5rem;
        // nav {
        //     display: flex;
        //     justify-content: flex-end;
        // }
        // label {
        //     position: relative;
        //     margin: 0 2px;
        // }
        // input[type=radio]{
        //     position: absolute;
        //     top: -200000rem;
        //     &:checked + .__label {
        //         border-color: rgba(0, 128, 0, 0.4);
        //         background-color: rgba(0, 128, 0, 0.4);
        //         color: rgba(0, 0, 0, 0.5);
        //     }
        // }
        // .__label{
        //     padding: 3px 7px;
        //     border-radius: 5px;
        //     border: 1px solid rgba(0, 0, 0, 0.1);
        //     background-color: rgba(0, 0, 0, 0.1);
        //     text-align: center;
        //     font-size: 13px;
        //     color: rgba(0, 0, 0, 0.3);
        // }
        // .titles{
        //     margin-top: 20px;
        //     padding-bottom: 5px;
        //     border-bottom: dashed 1px #ddd;
        //     .__title{
        //         color: #333;
        //     }
        // }
    }
    &-navs{
        display: flex;
        .__buttonCurrent{
            margin-left: 10px;
            padding: 0 10px;

            @include button-default;
            @include button-state;
        }
        .__buttonNav{
            box-sizing: border-box;
            width: 30px; 
            height: 30px;
            padding: 0;
            border-radius: 50%;
            font-size: 1rem;
            color: rgba(0, 0, 0, 0.5);
            @include button-default-circle;
            @include button-state;

        }
        .__textButton{
            position: relative;
            top: -2px;
        }
        .__titleNav{
            width: 85px;
            margin: 0 10px;
            font-size: 1.5rem;
        }
    }
    &-options{
        @mixin __getBorderColor($val){
            border-color: rgba(0, 0, 0, $val);
        }
        @mixin __getBGColor($val){
            background-color: rgba(0, 0, 0, $val);
        }
        @mixin __getColor($val){
            color: rgba(0, 0, 0, $val);
        }

        @mixin __getBorderColor--on($val){
            border-color: rgba(0, 128, 0, $val);
        }
        @mixin __getBGColor--on($val){
            background-color: rgba(0, 128, 0, $val);
        }

        display: flex;
        justify-content: flex-end;
        margin-top: 10px;
        .__labelFold{
            position: relative;
        }
        .__checkboxFold{
            @include formElementHidden;
        }
        .__textFold{
            display: inline-block;
            padding: 5px 10px;
            border-radius: 5px;
            border-style: solid;
            border-width: 1px;
            font-size: 13px;
            @include __getBorderColor(0.05);
            @include __getBGColor(0.05);
            @include __getColor(0.4);
        }
        .__checkboxFold{
            &:hover + .__textFold,
            &:focus + .__textFold{
                @include __getBorderColor(0.07);
                @include __getBGColor(0.07);
                @include __getColor(0.5);
            }
            &:hover:focus + .__textFold{
                @include __getBorderColor(0.1);
                @include __getBGColor(0.1);
                @include __getColor(0.5);
            }

            &:checked + .__textFold{
                @include __getBorderColor--on(0.2);
                @include __getBGColor--on(0.2);
                @include __getColor(0.5);
            }
            &:checked:hover + .__textFold,
            &:checked:focus + .__textFold{
                @include __getBorderColor--on(0.25);
                @include __getBGColor--on(0.25);
                @include __getColor(0.55);
            }
            &:checked:hover:focus + .__textFold{
                @include __getBorderColor--on(0.3);
                @include __getBGColor--on(0.3);
                @include __getColor(0.6);
            }
        }
    }
}

.habikers{
    margin-top: 1rem;
}

.habiker {
    padding: 10px 0;
    list-style: none;
    &-header{
        display: flex;
        border-bottom: 1px solid rgba(0, 0, 0, 0.1);
        padding-bottom: 5px;
        &:hover{
            border-color: rgba(0, 128, 0, 0.3);
        }
    }
    .__nameHabiker{
        flex: auto;
        min-width: 50%;
        margin: 0 5px 0 0;
        padding: 7px;
        outline: none;
        border-radius: 5px;
        border: none;
        text-overflow: ellipsis;
        font-size: 1.5rem;
    }
    .__buttonHabiker{
        box-sizing: border-box;
        width: 48px;
        margin-left: 2px;
        padding: 0.3rem 0.5rem;
        font-size: 14px;
        @include button-default;
        @include button-state;
    }
}

.trackers{
    display: flex;
    flex-flow: row wrap;
    margin-top: 5px;

    .habikers[data-fold="false"] & {
        display: none;
    }
}

.tracker{
    @mixin __getBorderColor($val){
        border-color: rgba(117, 117, 117, $val);
    }
    @mixin __getBGolor($val){
        background-color: rgba(117, 117, 117, $val);
    }
    @mixin __getColor($val){
        color: rgba(117, 117, 117, $val);
    }

    @mixin __getBorderColor--on($val){
        border-color: rgba(0, 128, 0, $val);
    }
    @mixin __getBGColor--on($val){
        background-color: rgba(0, 128, 0, $val);
    }
    @mixin __getColor--on($val){
        color: rgba(100, 123, 101, $val);
    }

    margin: 2px;
    .__checkboxTracker{
        @include formElementHidden;

    }
    .__dateTracker{
        @include flexCenterAll;
        width: 48px;
        height: 30px;
        border-radius: 20px;
        font-size: 1rem;
        border-style: solid; 
        border-width: 1px;
        @include __getBorderColor(0.07);
        @include __getBGolor(0.07);
        @include __getColor(0.4);
    }
    .__checkboxTracker{
        &:enabled + .__dateTracker{
            cursor: pointer;
        }
        &:enabled:hover + .__dateTracker,
        &:enabled:focus + .__dateTracker{
            @include __getBorderColor(0.1);
            @include __getBGolor(0.1);
            @include __getColor(0.5);
        }
        &:enabled:focus:hover + .__dateTracker{
            @include __getBorderColor(0.15);
            @include __getBGolor(0.15);
            @include __getColor(0.55);
        }

        &:checked + .__dateTracker{
            @include __getBorderColor--on(0.2);
            @include __getBGColor--on( 0.2);
            @include __getColor--on(0.6);
        }
        &:checked:hover + .__dateTracker,
        &:checked:focus + .__dateTracker{
            @include __getBorderColor--on(0.25);
            @include __getBGColor--on(0.25);
            @include __getColor--on(0.65);
        }
        &:checked:focus:hover + .__dateTracker{
            @include __getBorderColor--on(0.3);
            @include __getBGColor--on( 0.3);
            @include __getColor--on(0.7);
        }

        &:disabled + .__dateTracker{
            opacity: 0.5;
        }
    }
}

@import '_dimmed.scss';
@import '_localStorage.scss';




